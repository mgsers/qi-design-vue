(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{649:function(n,s,t){"use strict";t.r(s),s.default='# Toast 消息\n\n## {{ $t("common.usage.preview") }}\n\n<example></example>\n\n## {{ $t("common.usage.usage") }}\n\n### 弹出消息\n\n在 Vue 作用域下，通过全局方法 `toast(message, options)` 即可弹出消息：\n\n```\n// 弹出一个持续全局默认时长的消息\nthis.$qidesign.toast("message");\n\n// 弹出一个持续 3000ms 的消息\nthis.$qidesign.toast("message", { duration: 3000 } );\n\n// 弹出一个根据消息内容长度自动决定持续时间的消息\nthis.$qidesign.toast("message", { duration: "auto" } );\n```\n\n### 颜色与主题\n\n在 `options` 中，通过 `scope` 属性传入当前组件作用域来继承颜色和主题：\n\n```\nthis.$qidesign.toast("message", { scope: this });\n```\n\n也可以通过 `theme` 和 `color` 属性直接控制 Toast 消息的主题和颜色，这个方法的优先级最高。有关颜色和主题的内容，请参见 [主题组件](/#/usage/theme)。\n\n```\nthis.$qidesign.toast("message", { theme: "dark", color: "spring" });\n```\n\n如果没有设置颜色和主题相关的属性，将会使用全局的默认设置。\n\n### 全局设置\n\n您可以通过全局设置，修改 Toast 消息默认的持续时间、颜色和主题等内容：\n\n```\nimport { settings } from "@qiqi1996/qi-design-vue";\n\nsettings.defaults.toast_duration = 3000;\n// 默认持续 3000ms\n\nsettings.defaults.toast_duration = "auto";\n// 默认根据消息内容长度自动决定持续时间\n\nsettings.defaults.toast_theme = "dark";\n// 默认主题\n\nsettings.defaults.toast_color = "poe";\n// 默认颜色\n```\n\n{{ $t("common.usage.usage-tips") }}\n\n\x3c!-- ## {{ $t("common.usage.property") }} --\x3e'}}]);