(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{629:function(e,n,o){"use strict";o.r(n),n.default='# 复选框 <strong>Checkbox</strong>\n\n## {{ $t("common.usage.preview") }}\n\n<example></example>\n\n## {{ $t("common.usage.usage") }}\n\n```\n&lt;q-form-group v-model=&quot;checkbox&quot;&gt;\n    &lt;q-checkbox value=&quot;A&quot; default&gt;Checkbox A&lt;/q-checkbox&gt;\n    &lt;q-checkbox value=&quot;B&quot;&gt;Checkbox B&lt;/q-checkbox&gt;\n    &lt;q-checkbox value=&quot;C&quot;&gt;Checkbox C&lt;/q-checkbox&gt;\n    &lt;q-checkbox value=&quot;D&quot; disable&gt;Checkbox D&lt;/q-checkbox&gt;\n&lt;/q-form-group&gt;\n```\n\n复选框的使用与单选框略有不同，需要包裹一个外层组件 <strong>q-form-group</strong> 来接收多选的值。\n\n{{ $t("common.usage.usage-tips") }}\n\n## {{ $t("common.usage.property") }}\n\n<property-block>\n    <property-item\n        name="default"\n        definition="默认选中"\n        defaults="false"\n        values="Boolean"\n    >\n        <q-checkbox default>默认选中</q-checkbox>\n    </property-item>\n    <property-item\n        name="disable"\n        definition="禁用状态"\n        defaults="false"\n        values="Boolean"\n    >\n        <q-checkbox disable>禁用</q-checkbox>\n    </property-item>\n    <property-item\n        name="value"\n        definition="选项值"\n        defaults=""\n        values="Any"\n        required\n    >\n    </property-item>\n</property-block>\n\n## Checkbox {{$t("common.usage.events")}}\n\n<event-block>\n    <event-item\n        name="change"\n        definition="状态改变"\n        :values="[\'Boolean - 是否选中\']"\n    ></event-item>\n</event-block>\n\n## Form Group {{$t("common.usage.events")}}\n\n<q-text>以下为针对 Checkbox 组件 Form Group 的特定事件文档，此时 Form Group 会将自身管理的数据类型设置为 <strong>Set</strong>，但是回调时会处理成普通数组。</q-text>\n\n<event-block>\n    <event-item\n        name="change"\n        definition="状态改变"\n        :values="[\'Array - 所有选中的 Checkbox 的 value 值\']"\n    ></event-item>\n</event-block>\n\n'}}]);