(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{626:function(e,t,n){"use strict";n.r(t),t.default='# Avatar\n\n## {{ $t("common.usage.preview") }}\n\n<example></example>\n\n## {{ $t("common.usage.usage") }}\n\n```\n&lt;q-avatar src=&quot;./avatar.png&quot; size=&quot;large&quot; shape=&quot;circle&quot;&gt;&lt;/q-avatar&gt;\n&lt;!-- Display a large and round avatar picture --&gt;\n```\n\n{{ $t("common.usage.usage-tips") }}\n\n## {{ $t("common.usage.property") }}\n\n<property-block>\n    <property-item\n        name="src"\n        definition="Image Resource (for Light Mode)"\n        values="String"\n    >\n    </property-item>\n    <property-item\n        name="src-dark"\n        definition="Image Resource for Dark Mode, If this attribute is not set, the image with the src attribute of 0.7 transparency is used in Dark Mode."\n        values="String"\n    >\n    </property-item>\n    <property-item\n        name="size"\n        definition="Avatar size"\n        :values="[\'small\', \'normal\', \'large\']"\n    >\n    </property-item>\n    <property-item\n        name="size"\n        definition="Avatar shape"\n        :values="[\'square\', \'rounded-square\', \'circle\']"\n    >\n    </property-item>\n    </property-item>\n    <property-item\n        name="lazy"\n        definition="Whether to enable lazy loading. This property also can be set via global settings.defaults.avatar_lazy. By default, the value of settings.defaults.image_lazy is used."\n        defaults="false"\n        values="Boolean"\n    >\n    </property-item>\n    <property-item\n        name="loading"\n        definition="Image loading status, when set to true, use the built-in loading style of the component. You can also pass in custom Vue components. This property also can be set via global settings.defaults.avatar_loading. By default, the value of settings.defaults.image_loading is used."\n        defaults="false"\n        :values="[ \'true\', \'false\', \'VueComponent\' ]"\n    >\n    </property-item>\n    <property-item\n        name="error"\n        definition="Image loading failure status, when set to true, use the built-in failure style. You can also pass in custom Vue components. This property also can be set via global settings.defaults.avatar_error. By default, the value of settings.defaults.image_error is used."\n        defaults="false"\n        :values="[ \'true\', \'false\', \'VueComponent\' ]"\n    >\n    </property-item>\n</property-block>'}}]);